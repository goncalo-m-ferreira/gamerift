{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\ng sabe\\\\game-shop-website\\\\src\\\\components\\\\LoginModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { GoogleLogin } from 'react-google-login';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root'); // Set the root element for accessibility\n\nconst LoginModal = ({\n  isOpen,\n  onRequestClose\n}) => {\n  _s();\n  const [accessToken, setAccessToken] = useState('');\n  const responseGoogle = response => {\n    const authCode = response === null || response === void 0 ? void 0 : response.code;\n    axios.post('/api/auth', {\n      authCode\n    }).then(res => {\n      const token = res.data.access_token;\n      setAccessToken(token);\n      onRequestClose(); // Close the modal on successful login\n      // Store the token in local storage or state as needed\n    }).catch(error => {\n      console.error('Error exchanging auth code for token:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    contentLabel: \"Login Modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: \"YOUR_GOOGLE_CLIENT_ID\",\n        buttonText: \"Login with Google\",\n        onSuccess: responseGoogle,\n        onFailure: responseGoogle,\n        redirectUri: \"YOUR_REDIRECT_URI\",\n        responseType: \"code\",\n        accessType: \"offline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginModal, \"4kUypfIL/WFKFpa3PylEv3aEIKs=\");\n_c = LoginModal;\nexport default LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["React","useState","Modal","GoogleLogin","axios","jsxDEV","_jsxDEV","setAppElement","LoginModal","isOpen","onRequestClose","_s","accessToken","setAccessToken","responseGoogle","response","authCode","code","post","then","res","token","data","access_token","catch","error","console","contentLabel","children","fileName","_jsxFileName","lineNumber","columnNumber","clientId","buttonText","onSuccess","onFailure","redirectUri","responseType","accessType","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/ng sabe/game-shop-website/src/components/LoginModal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport axios from 'axios';\r\n\r\nModal.setAppElement('#root'); // Set the root element for accessibility\r\n\r\nconst LoginModal = ({ isOpen, onRequestClose }) => {\r\n  const [accessToken, setAccessToken] = useState('');\r\n\r\n  const responseGoogle = (response) => {\r\n    const authCode = response?.code;\r\n\r\n    axios.post('/api/auth', { authCode })\r\n      .then((res) => {\r\n        const token = res.data.access_token;\r\n        setAccessToken(token);\r\n        onRequestClose(); // Close the modal on successful login\r\n        // Store the token in local storage or state as needed\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error exchanging auth code for token:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={onRequestClose}\r\n      contentLabel=\"Login Modal\"\r\n    >\r\n      <div>\r\n        <h2>Login</h2>\r\n        <GoogleLogin\r\n          clientId=\"YOUR_GOOGLE_CLIENT_ID\"\r\n          buttonText=\"Login with Google\"\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          redirectUri=\"YOUR_REDIRECT_URI\"\r\n          responseType=\"code\"\r\n          accessType=\"offline\"\r\n        />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1BJ,KAAK,CAACK,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;;AAE9B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMa,cAAc,GAAIC,QAAQ,IAAK;IACnC,MAAMC,QAAQ,GAAGD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEE,IAAI;IAE/Bb,KAAK,CAACc,IAAI,CAAC,WAAW,EAAE;MAAEF;IAAS,CAAC,CAAC,CAClCG,IAAI,CAAEC,GAAG,IAAK;MACb,MAAMC,KAAK,GAAGD,GAAG,CAACE,IAAI,CAACC,YAAY;MACnCV,cAAc,CAACQ,KAAK,CAAC;MACrBX,cAAc,CAAC,CAAC,CAAC,CAAC;MAClB;IACF,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D,CAAC,CAAC;EACN,CAAC;EAED,oBACEnB,OAAA,CAACJ,KAAK;IACJO,MAAM,EAAEA,MAAO;IACfC,cAAc,EAAEA,cAAe;IAC/BiB,YAAY,EAAC,aAAa;IAAAC,QAAA,eAE1BtB,OAAA;MAAAsB,QAAA,gBACEtB,OAAA;QAAAsB,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd1B,OAAA,CAACH,WAAW;QACV8B,QAAQ,EAAC,uBAAuB;QAChCC,UAAU,EAAC,mBAAmB;QAC9BC,SAAS,EAAErB,cAAe;QAC1BsB,SAAS,EAAEtB,cAAe;QAC1BuB,WAAW,EAAC,mBAAmB;QAC/BC,YAAY,EAAC,MAAM;QACnBC,UAAU,EAAC;MAAS;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAACrB,EAAA,CAtCIH,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}