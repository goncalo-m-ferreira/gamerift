{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\trabalho de iw\\\\trabalho final de IW\\\\gamerift\\\\Gamerift\\\\src\\\\components\\\\Admin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [editUserId, setEditUserId] = useState(null);\n  const [editedEmail, setEditedEmail] = useState('');\n  const [editedPassword, setEditedPassword] = useState('');\n  useEffect(() => {\n    // Fetch users from API\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://api.sheety.co/182b17ec2dcc0a8d3be919b2baff9dfc/gamerift/folha1');\n        if (response.ok) {\n          const data = await response.json();\n          setUsers(data.folha1);\n        } else {\n          console.error('Failed to fetch users');\n        }\n      } catch (error) {\n        console.error('Error during fetch:', error.message);\n      }\n    };\n    fetchData();\n  }, []); // Run only once on component mount\n\n  const handleEditUser = userId => {\n    // Set the user ID to be edited and pre-fill the form with existing values\n    const userToEdit = users.find(user => user.id === userId);\n    setEditUserId(userId);\n    setEditedEmail(userToEdit.email);\n    setEditedPassword(userToEdit.password);\n  };\n  const handleUpdateUser = async () => {\n    try {\n      // Assume your API supports PUT method for user update\n      const response = await fetch(`https://api.sheety.co/182b17ec2dcc0a8d3be919b2baff9dfc/gamerift/folha1/${editUserId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: editedEmail,\n          password: editedPassword\n        })\n      });\n      if (response.ok) {\n        // Update the local state with the edited user\n        setUsers(prevUsers => prevUsers.map(user => user.id === editUserId ? {\n          ...user,\n          email: editedEmail,\n          password: editedPassword\n        } : user));\n        console.log('User updated successfully');\n        // Clear the edit mode\n        setEditUserId(null);\n        setEditedEmail('');\n        setEditedPassword('');\n      } else {\n        console.error('Failed to update user');\n      }\n    } catch (error) {\n      console.error('Error during user update:', error.message);\n    }\n  };\n  const handleDeleteUser = async userId => {\n    try {\n      // Assume your API supports DELETE method for user deletion\n      const response = await fetch(`https://api.sheety.co/182b17ec2dcc0a8d3be919b2baff9dfc/gamerift/folha1/${userId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        // Remove the deleted user from local state\n        setUsers(prevUsers => prevUsers.filter(user => user.id !== userId));\n        console.log('User deleted successfully');\n      } else {\n        console.error('Failed to delete user');\n      }\n    } catch (error) {\n      console.error('Error during user deletion:', error.message);\n    }\n  };\n  const handleCancelEdit = () => {\n    // Clear the edit mode\n    setEditUserId(null);\n    setEditedEmail('');\n    setEditedPassword('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editUserId === user.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedEmail,\n            onChange: e => setEditedEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editedPassword,\n            onChange: e => setEditedPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdateUser,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: `ID: ${user.id}, Email: ${user.email}, Password: ${user.password}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditUser(user.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteUser(user.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Admin, \"+TG0mcEGo8Uy8ScGcB/2pXSCUo4=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Admin","_s","users","setUsers","editUserId","setEditUserId","editedEmail","setEditedEmail","editedPassword","setEditedPassword","fetchData","response","fetch","ok","data","json","folha1","console","error","message","handleEditUser","userId","userToEdit","find","user","id","email","password","handleUpdateUser","method","headers","body","JSON","stringify","prevUsers","map","log","handleDeleteUser","filter","handleCancelEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Downloads/trabalho de iw/trabalho final de IW/gamerift/Gamerift/src/components/Admin.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Admin() {\r\n  const [users, setUsers] = useState([]);\r\n  const [editUserId, setEditUserId] = useState(null);\r\n  const [editedEmail, setEditedEmail] = useState('');\r\n  const [editedPassword, setEditedPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch users from API\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://api.sheety.co/182b17ec2dcc0a8d3be919b2baff9dfc/gamerift/folha1');\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setUsers(data.folha1);\r\n        } else {\r\n          console.error('Failed to fetch users');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during fetch:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // Run only once on component mount\r\n\r\n  const handleEditUser = (userId) => {\r\n    // Set the user ID to be edited and pre-fill the form with existing values\r\n    const userToEdit = users.find(user => user.id === userId);\r\n    setEditUserId(userId);\r\n    setEditedEmail(userToEdit.email);\r\n    setEditedPassword(userToEdit.password);\r\n  };\r\n\r\n  const handleUpdateUser = async () => {\r\n    try {\r\n      // Assume your API supports PUT method for user update\r\n      const response = await fetch(`https://api.sheety.co/182b17ec2dcc0a8d3be919b2baff9dfc/gamerift/folha1/${editUserId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email: editedEmail, password: editedPassword }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Update the local state with the edited user\r\n        setUsers((prevUsers) => prevUsers.map(user => (user.id === editUserId ? { ...user, email: editedEmail, password: editedPassword } : user)));\r\n        console.log('User updated successfully');\r\n        // Clear the edit mode\r\n        setEditUserId(null);\r\n        setEditedEmail('');\r\n        setEditedPassword('');\r\n      } else {\r\n        console.error('Failed to update user');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during user update:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async (userId) => {\r\n    try {\r\n      // Assume your API supports DELETE method for user deletion\r\n      const response = await fetch(`https://api.sheety.co/182b17ec2dcc0a8d3be919b2baff9dfc/gamerift/folha1/${userId}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Remove the deleted user from local state\r\n        setUsers((prevUsers) => prevUsers.filter(user => user.id !== userId));\r\n        console.log('User deleted successfully');\r\n      } else {\r\n        console.error('Failed to delete user');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during user deletion:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    // Clear the edit mode\r\n    setEditUserId(null);\r\n    setEditedEmail('');\r\n    setEditedPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>User Management</h2>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li key={user.id}>\r\n            {editUserId === user.id ? (\r\n              <>\r\n                <input type=\"text\" value={editedEmail} onChange={(e) => setEditedEmail(e.target.value)} />\r\n                <input type=\"text\" value={editedPassword} onChange={(e) => setEditedPassword(e.target.value)} />\r\n                <button onClick={handleUpdateUser}>Update</button>\r\n                <button onClick={handleCancelEdit}>Cancel</button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span>{`ID: ${user.id}, Email: ${user.email}, Password: ${user.password}`}</span>\r\n                <button onClick={() => handleEditUser(user.id)}>Edit</button>\r\n                <button onClick={() => handleDeleteUser(user.id)}>Delete</button>\r\n              </>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}