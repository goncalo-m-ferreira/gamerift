{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gomim\\\\Desktop\\\\trabalho final de IW\\\\gamerift\\\\Gamerift\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\"; // Certifique-se de ter o Bootstrap instalado para utilizar estes componentes\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleLogin = () => {\n    // Adicione aqui a lógica de autenticação real, por exemplo, fazer uma chamada à API para verificar as credenciais\n\n    // Neste exemplo, verifica se o username e a password não estão vazios\n    if (username && password) {\n      // Chama a função de login passada como prop\n      onLogin(username);\n    } else {\n      setError(\"Preencha o nome de usuário e a senha.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicUsername\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nome de Usu\\xE1rio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Digite seu nome de usu\\xE1rio\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Digite sua senha\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleLogin,\n        children: \"Entrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"4jNknrOuvZJHDfLk30xz3DpS4Uw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Button","Form","jsxDEV","_jsxDEV","Login","onLogin","_s","username","setUsername","password","setPassword","error","setError","handleLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gomim/Desktop/trabalho final de IW/gamerift/Gamerift/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\"; // Certifique-se de ter o Bootstrap instalado para utilizar estes componentes\n\nconst Login = ({ onLogin }) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = () => {\n    // Adicione aqui a lógica de autenticação real, por exemplo, fazer uma chamada à API para verificar as credenciais\n\n    // Neste exemplo, verifica se o username e a password não estão vazios\n    if (username && password) {\n      // Chama a função de login passada como prop\n      onLogin(username);\n    } else {\n      setError(\"Preencha o nome de usuário e a senha.\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>Login</h2>\n      <Form>\n        <Form.Group controlId=\"formBasicUsername\">\n          <Form.Label>Nome de Usuário</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Digite seu nome de usuário\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Senha</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Digite sua senha\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" onClick={handleLogin}>\n          Entrar\n        </Button>\n\n        {error && <p className=\"error-message\">{error}</p>}\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}